name: Build and deploy

on:
  push:
    branches:
      #      - master
      #      - dev
      - feature/byggetid2
      -
env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/dp-faktasider-frontend:${{ github.sha }}
  IMAGE_CACHE_BUILDER: docker.pkg.github.com/${{ github.repository }}/dp-faktasider-frontend-build-cache-builder
jobs:
  build:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Test react app and build docker image
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build . -t ${{ env.IMAGE_CACHE_BUILDER }} --build-arg GIT_SHA=${{  github.sha }} --build-arg BUILDKIT_INLINE_CACHE=1 --target build --cache-from=${{ env.IMAGE_CACHE_BUILDER }}
          docker push ${{ env.IMAGE_CACHE_BUILDER }}

      - name: Build Gatsby app and docker image
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build . -t ${{ env.IMAGE }} --target runtime  --build-arg GIT_SHA=${{  github.sha }} --cache-from=${{ env.IMAGE_CACHE_BUILDER }}
          docker push ${{ env.IMAGE }}

      - name: Archive NAIS yaml
        uses: actions/upload-artifact@v1
        with:
          name: nais-yaml
          path: nais

  deploy-dev:
    name: Deploy to dev
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-sbs
          RESOURCE: nais/nais.yaml
          VARS: nais/dev/vars.yaml
          PRINT_PAYLOAD: true

  deploy-dev-gcp:
    name: Deploy to dev gcp
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml
          VARS: nais/dev-gcp/vars.yaml
          PRINT_PAYLOAD: true

  deploy-prod:
    name: Deploy to Production
    needs: [ deploy-dev ]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-sbs
          RESOURCE: nais/nais.yaml
          VARS: nais/prod/vars.yaml
          PRINT_PAYLOAD: true
